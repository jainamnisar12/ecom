<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Products Page</title>
  <style>
    /* Global styles */
body {
  font-family: Arial, sans-serif;
  margin: 20px;
  padding: 0;
  background-color: #f1f1f1;
}
h1 {
  text-align: center;
  margin-bottom: 20px;
}
a {
  display: block;
  margin-bottom: 20px;
  text-align: center;
  color: #333;
  text-decoration: none;
  font-weight: bold;
}
a:hover {
  text-decoration: underline;
}
/* Product grid styles */
.product-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: space-between;
}
.product {
  width: calc(33.33% - 20px);
  text-align: center;
  border: 1px solid #ccc;
  padding: 10px;
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease-in-out;
  box-sizing: border-box; /* Ensure padding is included in width calculation */
}
.product:hover {
  transform: translateY(-5px);
}rs
.product img {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 0 auto;
  border-bottom: 1px solid #ccc;
  padding-bottom: 10px;
}
.product h2 {
  margin: 10px 0;
  font-size: 1.2rem;
  color: #333;
}
.product p {
  margin-bottom: 10px;
  color: #666;
}
.product button {
  background-color: #4caf50;
  color: white;
  border: none;
  padding: 8px 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.product button:hover {
  background-color: #45a049;
}
/* Pagination styles */
.pagination {
  margin-top: 20px;
  text-align: center;
}
.pagination a {
  display: inline-block;
  padding: 8px 16px;
  text-decoration: none;
  background-color: #f1f1f1;
  color: #333;
  border: 1px solid #ccc;
  margin-right: 5px;
  transition: background-color 0.3s ease;
}
.pagination a.active {
  background-color: #4caf50;
  color: white;
  border: 1px solid #4caf50;
}
/* Modal styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.4);
}
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  max-width: 600px;
}
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}
.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
}
/* Form styles */
form label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}
form input,
form textarea {
  width: calc(100% - 20px);
  padding: 8px;
  margin-bottom: 10px;
  box-sizing: border-box;
}
form button {
  background-color: #4caf50;
  color: white;
  border: none;
  padding: 10px 20px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
form button:hover {
  background-color: #45a049;
}

  </style>
</head>
<body>
  <h1>Our Products</h1>
  <a href="/upload">Upload New Products</a>

  <div id="productContainer" class="product-container">
    <% product.forEach(product => { %>
    <div class="product">
      <% if (product.imagePath) { %>
      <img src="<%= product.imagePath %>" alt="<%= product.name %>" />
      <% } %>
      <h2><%= product.name %></h2>
      <p>$<%= product.price %></p>
      <p><%= product.description %></p>
      <button class="edit-button" data-id="<%= product._id %>">Edit</button>
      <button class="delete-button" data-id="<%= product._id %>">Delete</button>
    </div>
    <% }); %>
  </div>

  <div class="pagination">
    <% const totalPages = Math.ceil(totalProductsCount / 10); %> 
    <% for (let i = 1; i <= totalPages; i++) { %>
    <a href="/products?page=<%= i %>&limit=10" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
    <% } %>
  </div>

  <!-- The Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Edit Product</h2>
      <form id="editForm">
        <input type="hidden" id="editProductId" name="id">
        <label for="editProductName">Name:</label>
        <input type="text" id="editProductName" name="name" required><br><br>
        <label for="editProductPrice">Price:</label>
        <input type="number" id="editProductPrice" name="price" required><br><br>
        <label for="editProductDescription">Description:</label>
        <textarea id="editProductDescription" name="description" required></textarea><br><br>
        <label for="editProductImagePath">Image Path (optional):</label>
        <input type="text" id="editProductImagePath" name="imagePath"><br><br>
        <button type="submit">Save Changes</button>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const editButtons = document.querySelectorAll('.edit-button');
      const deleteButtons = document.querySelectorAll('.delete-button');
      const modal = document.getElementById('editModal');
      const span = document.getElementsByClassName('close')[0];
      const editForm = document.getElementById('editForm');

      editButtons.forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.dataset.id;
          const product = this.parentElement;
          const productName = product.querySelector('h2').innerText;
          const productPrice = product.querySelector('p:nth-of-type(1)').innerText.replace('$', '');
          const productDescription = product.querySelector('p:nth-of-type(2)').innerText;
          const productImagePath = product.querySelector('img') ? product.querySelector('img').src : '';

          document.getElementById('editProductId').value = productId;
          document.getElementById('editProductName').value = productName;
          document.getElementById('editProductPrice').value = productPrice;
          document.getElementById('editProductDescription').value = productDescription;
          document.getElementById('editProductImagePath').value = productImagePath;

          modal.style.display = 'block';
        });
      });

      span.onclick = function() {
        modal.style.display = 'none';
      }

      window.onclick = function(event) {
        if (event.target == modal) {
          modal.style.display = 'none';
        }
      }

      editForm.addEventListener('submit', async function(event) {
        event.preventDefault();

        const productId = document.getElementById('editProductId').value;
        const updatedProduct = {
          name: document.getElementById('editProductName').value,
          price: document.getElementById('editProductPrice').value,
          description: document.getElementById('editProductDescription').value,
          imagePath: document.getElementById('editProductImagePath').value
        };

        try {
          const response = await fetch(`/products/${productId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(updatedProduct),
          });

          if (response.ok) {
            alert('Product updated successfully');
            location.reload(); // Reload the page to show updated product
          } else {
            const errorData = await response.json();
            alert('Error updating product: ' + errorData.error);
          }
        } catch (error) {
          console.error('Error updating product:', error);
          alert('Failed to update product');
        }
      });

      deleteButtons.forEach(button => {
        button.addEventListener('click', async function() {
          const productId = this.dataset.id;

          if (confirm('Are you sure you want to delete this product?')) {
            try {
              const response = await fetch(`/products/${productId}`, {
                method: 'DELETE',
              });

              if (response.ok) {
                alert('Product deleted successfully');
                location.reload(); // Reload the page to remove the deleted product
              } else {
                const errorData = await response.json();
                alert('Error deleting product: ' + errorData.error);
              }
            } catch (error) {
              console.error('Error deleting product:', error);
              alert('Failed to delete product');
            }
          }
        });
      });
    });
  </script>
</body>
</html>